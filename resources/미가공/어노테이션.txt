# 어노테이션 (JetPack)

어노테이션은 **클래스에 대한 메타데이터를 제공하는 주석**이다.
컴파일 타임이나 런타임에서 도구/프레임워크가 코드를 처리해야 하는 방식의 정보를 제공한다
@Override 와 @NonNull 등은 컴파일 타임 에러 검사 등을 지원하며, 
Retrofit,Hilt와 같은 라이브러리는 주석을 사용하여 네트워크 통신,종속성을 위한 코드를 생성한다.
여기서 DI 과정에 사용되는 어노테이션은 리플렉션을 사용한다 이외에도 Room,Serializable 등은 인스턴스 정보를 파악하기 위하여 리플렉션을 이용하게 된다.
reflection 작업은 무겁기 때문에, 성능이 중요하다면 직렬화의 write/create 함수를 직접 작성해주도록 하자...

## 어노테이션 프로세서

어노테이션을 정의하고, 어노테이션이 적용된 코드를 변환한다.
자바 컴파일러의 플러그인으로, 컴파일타임에 자동으로 호출된다.
코틀린에 적용되기 위해서는 KAPT(Kotlin Annotation Processing Tool)이 필요하다(느림)
최근 KSP(Kotlin Symbol Processing)라는 코틀린 전용 컴파일러 플러그인 개발 API이다. 속도가 빠른 어노테이션 프로세서를 직접 더할 수 있다

왜 코틀린은 자바 어노테이션 프로세서 못 써? 코틀린은 자바 파일보다 먼저 컴파일되어 의존성 있는 자바 코드와 함께 class로 변환된다
그렇다면 자바 어노테이션 프로세싱 시점에 코틀린은 이미 class이다! 