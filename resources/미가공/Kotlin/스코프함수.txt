# 스코프함수

run,let,apply,also,with
임시 스코프를 형성하여 인스턴스를 핸들링하는 함수들
코드의 간결성 향상을 돕는다. 
"semantics"를 추가한다

얼레? 어런?


it - 매개변수로 전달하는 것처럼 (T) -> R, 내부적으로는 block(this) : 객체 외부에서 조작하는 것처럼 작성, 매개변수니까 이름도 바꿀 수 있고!

 - let : non-null 인스턴스를 함수에 사용하고자 할 때, 로컬 스코프 속에서 전달받은 변수처럼 사용하고 싶을때, 결과 반환
 - also : 객체에 외부에서 추가 효과를 가할 때, 인스턴스 반환

this - 객체 내에서 사용하는 것처럼 T.() -> R (T를 리시버로 R 반환) 내부적으로는 block() : 객체 내부에서 조작하는 것처럼 작성

 - apply : 초기화에 많이 쓰이는 스코프함수, 인스턴스에 붙여 실행하면 함수를 적용하고 인스턴스를 반환한다
 - run : 초기화 후에 계산 결과가 필요할 경우, 함수식 내 계산 결과를 반환한다
 - with : 어떤 객체를 사용하는 여러 함수를 호출하고자 할 때, **리시버를 parameter로 명시적 전달**

비확장 run -> 점 안찍고 사용하는 run, 함수 넣은 변수를 run으로 실행시키면 가독성이 좋겠지? 안에 있는 게 누가봐도 함수니,
또는 val foo = run{} 으로 실행하고 이걸 사용할 때 statement(함수식)이 발동하는 식으로도 사용 가능